<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classtnt_1_1type__info" kind="class" language="C++" prot="public" final="yes">
    <compoundname>tnt::type_info</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtnt_1_1type__info_1aa254b0d48c224b63db3c2bb2f2fbfafc" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tnt::type_info::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="56" column="20" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtnt_1_1type__info_1aa1c5f88e1ebd75974a95cd5117358111" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t tnt::type_info::name_s</definition>
        <argsstring></argsstring>
        <name>name_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="57" column="21" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtnt_1_1type__info_1ae5f981ce1def6f5faca07d17a5223242" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t tnt::type_info::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="59" column="21" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtnt_1_1type__info_1a884dd60aadae8bf26a7fed45f4455267" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr tnt::type_info::type_info</definition>
        <argsstring>(type_info const &amp;other) noexcept</argsstring>
        <name>type_info</name>
        <param>
          <type><ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="17" column="19" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1ac0acd1403ba118442fd54da48adff197" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr tnt::type_info::type_info</definition>
        <argsstring>(type_info &amp;&amp;other) noexcept</argsstring>
        <name>type_info</name>
        <param>
          <type><ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="20" column="19" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1aebd19005a6d4faac5a540a9b5960c5dc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> &amp;</type>
        <definition>constexpr type_info&amp; tnt::type_info::operator=</definition>
        <argsstring>(type_info const &amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="25" column="29" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1a7ffb5ea6787c9f0bb3083737ca471008" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> &amp;</type>
        <definition>constexpr type_info&amp; tnt::type_info::operator=</definition>
        <argsstring>(type_info &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="33" column="29" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1aaf6a690ac93378c2142664ef3682feaa" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t tnt::type_info::hash</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="43" column="31" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1a7d8fad29869ba19bf58fe3da3986024e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const char *</type>
        <definition>constexpr const char* tnt::type_info::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="45" column="30" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1type__info_1aa9b5e0a187483dc4037e9737c4f6c2a1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool tnt::type_info::operator==</definition>
        <argsstring>(type_info const &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="47" column="24" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtnt_1_1type__info_1a611fa735da23b17a8616ee88b633bfb5" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr tnt::type_info::type_info</definition>
        <argsstring>(std::string_view n, std::size_t const &amp;h) noexcept</argsstring>
        <name>type_info</name>
        <param>
          <type>std::string_view</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::size_t const &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="53" column="19" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="53" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtnt_1_1type__info_1a61cec1aa69c3e95ca7df74ff1bf4b241" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr friend <ref refid="classtnt_1_1type__info" kindref="compound">type_info</ref></type>
        <definition>constexpr friend type_info type_id</definition>
        <argsstring>() noexcept</argsstring>
        <name>type_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="62" column="36" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="66" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" line="14" column="5" bodyfile="E:/thing/cpp/tnt/include/mirror/TypeInfo.hpp" bodystart="15" bodyend="63"/>
    <listofallmembers>
      <member refid="classtnt_1_1type__info_1aaf6a690ac93378c2142664ef3682feaa" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>hash</name></member>
      <member refid="classtnt_1_1type__info_1ae5f981ce1def6f5faca07d17a5223242" prot="private" virt="non-virtual"><scope>tnt::type_info</scope><name>index</name></member>
      <member refid="classtnt_1_1type__info_1a7d8fad29869ba19bf58fe3da3986024e" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>name</name></member>
      <member refid="classtnt_1_1type__info_1aa254b0d48c224b63db3c2bb2f2fbfafc" prot="private" virt="non-virtual"><scope>tnt::type_info</scope><name>name_</name></member>
      <member refid="classtnt_1_1type__info_1aa1c5f88e1ebd75974a95cd5117358111" prot="private" virt="non-virtual"><scope>tnt::type_info</scope><name>name_s</name></member>
      <member refid="classtnt_1_1type__info_1aebd19005a6d4faac5a540a9b5960c5dc" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>operator=</name></member>
      <member refid="classtnt_1_1type__info_1a7ffb5ea6787c9f0bb3083737ca471008" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>operator=</name></member>
      <member refid="classtnt_1_1type__info_1aa9b5e0a187483dc4037e9737c4f6c2a1" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>operator==</name></member>
      <member refid="classtnt_1_1type__info_1a61cec1aa69c3e95ca7df74ff1bf4b241" prot="private" virt="non-virtual"><scope>tnt::type_info</scope><name>type_id</name></member>
      <member refid="classtnt_1_1type__info_1a884dd60aadae8bf26a7fed45f4455267" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>type_info</name></member>
      <member refid="classtnt_1_1type__info_1ac0acd1403ba118442fd54da48adff197" prot="public" virt="non-virtual"><scope>tnt::type_info</scope><name>type_info</name></member>
      <member refid="classtnt_1_1type__info_1a611fa735da23b17a8616ee88b633bfb5" prot="private" virt="non-virtual"><scope>tnt::type_info</scope><name>type_info</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
