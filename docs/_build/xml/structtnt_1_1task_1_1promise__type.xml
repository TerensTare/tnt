<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="structtnt_1_1task_1_1promise__type" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>tnt::task::promise_type</compoundname>
    <innerclass refid="structtnt_1_1task_1_1promise__type_1_1final__awaiter" prot="public">tnt::task::promise_type::final_awaiter</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structtnt_1_1task_1_1promise__type_1a3c0fdb1cdee22c0bc7ee2d57a6c5aff8" prot="private" static="no" mutable="no">
        <type>std::coroutine_handle</type>
        <definition>std::coroutine_handle tnt::task&lt; T &gt;::promise_type::ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="93" column="10" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtnt_1_1task_1_1promise__type_1a4d9085866688a0080394e9c0cbe02a46" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T tnt::task&lt; T &gt;::promise_type::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="94" column="11" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtnt_1_1task_1_1promise__type_1a36e6adbacb300fc02b55a139368881b7" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend tnt::task&lt; T &gt;::promise_type::task&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>task&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="96" column="9" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtnt_1_1task_1_1promise__type_1a91ad980557e295b53cd56e4f67851aff" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classtnt_1_1task" kindref="compound">task</ref>&lt; T &gt;</type>
        <definition>task&lt;T&gt; tnt::task&lt; T &gt;::promise_type::get_return_object</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_return_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="76" column="21" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structtnt_1_1task_1_1promise__type_1a54d0eb4fdc17460f38c2d89c934834eb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::suspend_always</type>
        <definition>std::suspend_always tnt::task&lt; T &gt;::promise_type::initial_suspend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>initial_suspend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="81" column="36" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structtnt_1_1task_1_1promise__type_1ab1d6afe617b26c879a5e67eadb961d8a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structtnt_1_1task_1_1promise__type_1_1final__awaiter" kindref="compound">final_awaiter</ref></type>
        <definition>final_awaiter tnt::task&lt; T &gt;::promise_type::final_suspend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>final_suspend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="82" column="30" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structtnt_1_1task_1_1promise__type_1a5cd9b023a62462dbd4e84726da8add49" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::suspend_never</type>
        <definition>std::suspend_never tnt::task&lt; T &gt;::promise_type::return_value</definition>
        <argsstring>(T val) noexcept</argsstring>
        <name>return_value</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="84" column="35" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structtnt_1_1task_1_1promise__type_1afe99ec43ae0caea79a506250c67fb891" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tnt::task&lt; T &gt;::promise_type::unhandled_exception</definition>
        <argsstring>() const noexcept</argsstring>
        <name>unhandled_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="90" column="22" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/thing/cpp/tnt/include/async/Task.hpp" line="63" column="5" bodyfile="E:/thing/cpp/tnt/include/async/Task.hpp" bodystart="64" bodyend="97"/>
    <listofallmembers>
      <member refid="structtnt_1_1task_1_1promise__type_1a3c0fdb1cdee22c0bc7ee2d57a6c5aff8" prot="private" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>ctx</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1ab1d6afe617b26c879a5e67eadb961d8a" prot="public" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>final_suspend</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1a91ad980557e295b53cd56e4f67851aff" prot="public" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>get_return_object</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1a54d0eb4fdc17460f38c2d89c934834eb" prot="public" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>initial_suspend</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1a5cd9b023a62462dbd4e84726da8add49" prot="public" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>return_value</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1a36e6adbacb300fc02b55a139368881b7" prot="private" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>task&lt; T &gt;</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1afe99ec43ae0caea79a506250c67fb891" prot="public" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>unhandled_exception</name></member>
      <member refid="structtnt_1_1task_1_1promise__type_1a4d9085866688a0080394e9c0cbe02a46" prot="private" virt="non-virtual"><scope>tnt::task::promise_type</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
