<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classtnt_1_1_expected_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>tnt::Expected&lt; void &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtnt_1_1_expected_3_01void_01_4_1a0974fa3ab5b3d98e7197acea178ee0c0" prot="private" static="no" mutable="no">
        <type>std::exception_ptr</type>
        <definition>std::exception_ptr tnt::Expected&lt; void &gt;::spam</definition>
        <argsstring></argsstring>
        <name>spam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="181" column="28" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1ac6d6098bbc2f95b98b7ab8acb29ecdc9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tnt::Expected&lt; void &gt;::Expected</definition>
        <argsstring>(E const &amp;e)</argsstring>
        <name>Expected</name>
        <param>
          <type>E const &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="185" column="18" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="185" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1aeed2db24bae77f874e55562b8dcb2026" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tnt::Expected&lt; void &gt;::Expected</definition>
        <argsstring>(const Expected&lt; T &gt; &amp;e)</argsstring>
        <name>Expected</name>
        <param>
          <type>const <ref refid="classtnt_1_1_expected" kindref="compound">Expected</ref>&lt; T &gt; &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="189" column="18" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a57dbe5043640a717c0ec27542a67de44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tnt::Expected&lt; void &gt;::Expected</definition>
        <argsstring>(Expected &amp;&amp;o)</argsstring>
        <name>Expected</name>
        <param>
          <type><ref refid="classtnt_1_1_expected" kindref="compound">Expected</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="195" column="9" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a67735fad0241cc04d03531403ddc4bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tnt::Expected&lt; void &gt;::Expected</definition>
        <argsstring>()</argsstring>
        <name>Expected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="196" column="9" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1ae1829342dc9a8cf9b916ef74fccc6d5f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classtnt_1_1_expected" kindref="compound">Expected</ref> &amp;</type>
        <definition>Expected&amp; tnt::Expected&lt; void &gt;::operator=</definition>
        <argsstring>(const Expected &amp;e) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtnt_1_1_expected" kindref="compound">Expected</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="198" column="25" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a0c6f77721250441230628814d49c1a23" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tnt::Expected&lt; void &gt;::operator==</definition>
        <argsstring>(invalid const &amp;) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structtnt_1_1invalid" kindref="compound">invalid</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="205" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1afe63b76a29f0e79f51914f0caff19026" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tnt::Expected&lt; void &gt;::operator!=</definition>
        <argsstring>(invalid const &amp;) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structtnt_1_1invalid" kindref="compound">invalid</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="206" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a14e70b2dfadf752abb84806798271270" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tnt::Expected&lt; void &gt;::isValid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="208" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a51b335aa0232437d3b0a239b19fe8b9f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tnt::Expected&lt; void &gt;::wasSuccessful</definition>
        <argsstring>() const noexcept</argsstring>
        <name>wasSuccessful</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="209" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a644f3aac8f5b0d508e1fa412a6c3b3c0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tnt::Expected&lt; void &gt;::get</definition>
        <argsstring>() const noexcept(noexcept(isValid()))</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="211" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classtnt_1_1_expected_3_01void_01_4_1a7e8734ec94eb18a69f2c2bc563eb94ff" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tnt::Expected&lt; void &gt;::suppress</definition>
        <argsstring>() noexcept</argsstring>
        <name>suppress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="217" column="21" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/thing/cpp/tnt/include/types/Expected.hpp" line="179" column="5" bodyfile="E:/thing/cpp/tnt/include/types/Expected.hpp" bodystart="180" bodyend="218"/>
    <listofallmembers>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1ac6d6098bbc2f95b98b7ab8acb29ecdc9" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>Expected</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1aeed2db24bae77f874e55562b8dcb2026" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>Expected</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a57dbe5043640a717c0ec27542a67de44" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>Expected</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a67735fad0241cc04d03531403ddc4bdc" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>Expected</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a644f3aac8f5b0d508e1fa412a6c3b3c0" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>get</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a14e70b2dfadf752abb84806798271270" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>isValid</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1afe63b76a29f0e79f51914f0caff19026" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>operator!=</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1ae1829342dc9a8cf9b916ef74fccc6d5f" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a0c6f77721250441230628814d49c1a23" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>operator==</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a0974fa3ab5b3d98e7197acea178ee0c0" prot="private" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>spam</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a7e8734ec94eb18a69f2c2bc563eb94ff" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>suppress</name></member>
      <member refid="classtnt_1_1_expected_3_01void_01_4_1a51b335aa0232437d3b0a239b19fe8b9f" prot="public" virt="non-virtual"><scope>tnt::Expected&lt; void &gt;</scope><name>wasSuccessful</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
