<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespacetnt_1_1linear" kind="namespace" language="C++">
    <compoundname>tnt::linear</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_easings_8hpp_1a03a7afe051a3dda387931d9a0b135e46" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tnt::linear::NoEase</definition>
        <argsstring></argsstring>
        <name>NoEase</name>
        <initializer>= [](float time, float begin, float change,
                                          float duration) -&gt; float {
            return change * time / duration + begin;
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/math/Easings.hpp" line="209" column="31" bodyfile="E:/thing/cpp/tnt/include/math/Easings.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_easings_8hpp_1a7a7cbea587e47d1d92256a77b50044eb" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tnt::linear::EaseIn</definition>
        <argsstring></argsstring>
        <name>EaseIn</name>
        <initializer>= [](float time, float begin, float change,
                                          float duration) -&gt; float {
            return change * time / duration + begin;
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/math/Easings.hpp" line="214" column="31" bodyfile="E:/thing/cpp/tnt/include/math/Easings.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_easings_8hpp_1aa39f017fbca85df4fca6ec866d7f64a1" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tnt::linear::EaseOut</definition>
        <argsstring></argsstring>
        <name>EaseOut</name>
        <initializer>= [](float time, float begin, float change, float duration) -&gt; float {
            return change * time / duration + begin;
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/math/Easings.hpp" line="219" column="31" bodyfile="E:/thing/cpp/tnt/include/math/Easings.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_easings_8hpp_1a5e69a12db838303897475a6dc480eabd" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tnt::linear::EaseInOut</definition>
        <argsstring></argsstring>
        <name>EaseInOut</name>
        <initializer>= [](float time, float begin, float change, float duration) -&gt; float {
            return change * time / duration + begin;
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/thing/cpp/tnt/include/math/Easings.hpp" line="223" column="31" bodyfile="E:/thing/cpp/tnt/include/math/Easings.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="E:/thing/cpp/tnt/include/math/Easings.hpp" line="207" column="5"/>
  </compounddef>
</doxygen>
